Refactoring Notes
(Things to consider)

1. Duplicate Codes:
(Similar blocks of code)

a)
in import/api/headlines/method.js (from lines 6 to 12):
export const headlinesGetAll = new ValidatedMethod({
  name: 'headlines.getAll',
  validate: new SimpleSchema({}).validator(),
  run() {
    return Headlines.find({}).fetch();

in import/api/companies/method.js (from lines 6 to 12):
export const companiesGetAll = new ValidatedMethod({
  name: 'companies.getAll',
  validate: new SimpleSchema({}).validator(),
  run() {
    return Companies.find({}).fetch();

b)
in imports/ui/reducers/stockReducer.js (from lines 12 to 29):
const stockReducer = (state = initialState, action) => {
  switch (action.type) {
    case SPECIFIC_STOCK_REQUEST_SUCCESS:
      return {
        ...state,
			.
			.
			.
};

in imports/ui/reducers/newsReducer.js (from lines 12 to 30):
const newsReducer = (state = initialState, action) => {
  switch (action.type) {
    case NEWS_GET_BY_SYMBOL_SUCCESS:
      return {
        ...state,
		.
		.
		.
};

c) in imports/ui/actions/companyActions.js (from lines 14 to 25):
export const fetchCompanies = () => {
  return dispatch => {
    dispatch(fetchCompaniesBegin());
    companiesGetAll.call({}, (error, result) => {
      if (error) {
			.
			.
			.
};

in imports/ui/actions/headlineActions.js (from lines 7 to 18):
export const fetchHeadlines = () => {
  return dispatch => {
    dispatch(fetchHeadlinesBegin());
    headlinesGetAll.call({}, (error, result) => {
      if (error) {
			.
			.
			.
};

2. CODE SMELLS:
Notes:
Long Method or long function makes the code harder to understand and maintain. By breaking long method or function down into smaller pieces of code, it would make the code easier to understand. 
Cognitive complexity is the term that tells you the difficulty of reading and understanding the code you wrote.
There are two rules that will make the code more complex, the first one is the breaking in linear flow of the code and the second one is the nested flow breaking structures.  

For function Visualiza in import/ui/pages/Visualiza.jsk:
It has 71 lines of code, and it exceeds 25 lines of code (recommended).
It has a cognitive complexity of 9, and it exceeds 5 (recommended).

For function About in import/ui/pages/About.jsk:      
It has 29 lines of code, and it exceeds 25 lines of code (recommended).

For function NavbarMenu in import/ui/components/NavbarMenu.jsk:
It has 35 lines of code, and it exceeds 25 lines of code (recommended).

For function Search in import/ui/components/Search.jsk:
It has 70 lines of code, and it exceeds 25 lines of code (recommended).

For function Profile in import/ui/components/Profile.jsk:
It has a cognitive complexity of 13, and it exceeds 5 (recommended).


Defect Discovery
The main issue that we were experiencing was the limitation of the web server’s data size (because we are using a free plan in heroku). Our company’s dataset is very large, so the loading time is slow, and sometimes the app crashes. 



